/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pending00;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JFrame;

/**
 *
 * @author jiayingwang
 */
public class Register extends javax.swing.JFrame {

    /**
     * Creates new form Register
     */
    public Register() {
        initComponents();
        //add job type
        //usertypetext.addItem(" ");
        //usertypetext.addItem("Admin");
        usertypetext.addItem("City Official");
        usertypetext.addItem("City Scientist");

        //add city and state read from database
        addState();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        basic = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        usertext = new javax.swing.JTextField();
        emailtext = new javax.swing.JTextField();
        usertypetext = new javax.swing.JComboBox<>();
        citytext = new javax.swing.JComboBox<>();
        statetext = new javax.swing.JComboBox<>();
        titletext = new javax.swing.JTextField();
        create = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        passwordtext = new javax.swing.JPasswordField();
        confirmtext = new javax.swing.JPasswordField();
        jScrollPane1 = new javax.swing.JScrollPane();
        info = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Username");

        jLabel2.setText("Email Address");

        jLabel3.setText("Password");

        jLabel4.setText("Confirm Password");

        jLabel5.setText("User Type");

        jLabel6.setText("Fill out this form if you choose city officials");

        jLabel7.setText("City");

        jLabel8.setText("State");

        jLabel9.setText("Title");

        citytext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                citytextActionPerformed(evt);
            }
        });

        statetext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statetextActionPerformed(evt);
            }
        });

        titletext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titletextActionPerformed(evt);
            }
        });

        create.setText("Create");
        create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createActionPerformed(evt);
            }
        });

        jLabel10.setText("Register");

        passwordtext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordtextActionPerformed(evt);
            }
        });

        info.setColumns(20);
        info.setRows(5);
        jScrollPane1.setViewportView(info);

        javax.swing.GroupLayout basicLayout = new javax.swing.GroupLayout(basic);
        basic.setLayout(basicLayout);
        basicLayout.setHorizontalGroup(
            basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, basicLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(basicLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                        .addComponent(usertypetext, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83))
                    .addGroup(basicLayout.createSequentialGroup()
                        .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, basicLayout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(81, 81, 81))
                                .addGroup(basicLayout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(108, 108, 108)))
                            .addGroup(basicLayout.createSequentialGroup()
                                .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(56, 56, 56)))
                        .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(usertext, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                            .addComponent(emailtext)
                            .addComponent(passwordtext)
                            .addComponent(confirmtext))
                        .addGap(99, 99, 99))))
            .addGroup(basicLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(basicLayout.createSequentialGroup()
                .addGap(176, 176, 176)
                .addComponent(create)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(basicLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(basicLayout.createSequentialGroup()
                        .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(130, 130, 130)
                        .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(basicLayout.createSequentialGroup()
                                .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(citytext, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(statetext, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(basicLayout.createSequentialGroup()
                                .addComponent(titletext, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(basicLayout.createSequentialGroup()
                        .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(basicLayout.createSequentialGroup()
                                .addGap(218, 218, 218)
                                .addComponent(jLabel10)))
                        .addGap(0, 65, Short.MAX_VALUE))))
        );
        basicLayout.setVerticalGroup(
            basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(basicLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel10)
                .addGap(28, 28, 28)
                .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(usertext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(22, 22, 22)
                .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(emailtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(passwordtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(confirmtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usertypetext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(statetext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(citytext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titletext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(12, 12, 12)
                .addComponent(create)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(basic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(basic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void createActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
        
        //connect to database
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_32","cs4400_32","cSPtL15a");
            if(!con.isClosed())
                System.out.println("Successfully connected to " +
                        "MySQL server using TCP/IP...");

            String un = usertext.getText();
            String em = emailtext.getText();
            String pw = new String(passwordtext.getPassword());
            String cf = new String(confirmtext.getPassword());                    

            Statement statement2 = con.createStatement();
            ResultSet result = statement2.executeQuery("SELECT * FROM user WHERE UserName = '"+un+"'"); 
            if(result.next()){
                info.setText("Sorry, we already have this username!\n");
            }else{
                Statement statement4 = con.createStatement();
                ResultSet result4 = statement4.executeQuery("SELECT * FROM user WHERE EmailAddress = '"+em+"'"); 
                if(result4.next()){
                    info.setText("Sorry, we already have this email!\n");
                }else{
                    if (un.length() == 0 || em.length() == 0 || pw.length() == 0 || cf.length() == 0 || usertypetext.getSelectedItem()== "") {
                        info.setText("Please fill all blanks!");
                    }else {
                      
                        if (!cf.equals(pw)) {       
                            info.setText("Sorry, password doesn't match!");
                        }else{
                            
                            String jt = (String) usertypetext.getSelectedItem();
                            if(jt == "City Official"){
                                jt = "CityOfficial";
                            }else if(jt == "City Scientist"){
                                jt = "CityScientist";
                            }           

                            if(jt == "CityOfficial"){

                                if(citytext.getSelectedItem() == null || statetext.getSelectedItem() == null || titletext.getText().length() == 0){
                                    info.setText("Please fill all blanks!");
                                }else{
                                    String cy = (String) citytext.getSelectedItem();
                                    String st = (String) statetext.getSelectedItem();
                                    String tt = titletext.getText();

                                    Statement statement = con.createStatement();
                                    statement.executeUpdate("INSERT INTO CityOfficial " + "VALUES ('"+un+"','"+tt+"', null ,'"+cy+"','"+st+"')");
                                    statement.executeUpdate("INSERT INTO user " + "VALUES ('"+em+"','"+un+"','"+pw+"','"+jt+"')");

                                    info.setText("Cong! Successfully created a new user!");

                                }

                            }else {
                                Statement statement = con.createStatement();
                                statement.executeUpdate("INSERT INTO user " + "VALUES ('"+em+"','"+un+"','"+pw+"','"+jt+"')");

                                info.setText("Cong! Successfully created a new user!");
                            }
                        
                        
                        
                        }                          
                    }
                }
            }

            con.close();

        } catch(Exception e2) {
            System.err.println("Exception: " + e2.getMessage());
        }
    }                                      

    private void citytextActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void statetextActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        citytext.removeAllItems();
        String state = (String) statetext.getSelectedItem();
        filtercity(state);
        System.out.println(state);
    }                                         

    private void titletextActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void passwordtextActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            
   
     private void filtercity(String state){
        
        Connection con = null;
        try {
                    Class.forName("com.mysql.jdbc.Driver").newInstance();
                    con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_32","cs4400_32","cSPtL15a");
                    if(!con.isClosed())
                        System.out.println("Successfully connected to " +
                                "MySQL server using TCP/IP...");

                    Statement stmt = con.createStatement( );
                    String SQL = "SELECT City FROM CityState WHERE State = '"+state+"';";
                    ResultSet rs = stmt.executeQuery(SQL);
                   
                    while(rs.next()){
                        citytext.addItem(rs.getString("City"));
                    }
                    
                    con.close();

            } catch(Exception e2) {
                    System.err.println("Exception: " + e2.getMessage());
            }
    }
    
    private void addState(){
         Connection con = null;
                try {
                    Class.forName("com.mysql.jdbc.Driver").newInstance();
                    con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_32","cs4400_32","cSPtL15a");
                    if(!con.isClosed())
                        System.out.println("Successfully connected to " +
                                "MySQL server using TCP/IP...");

                    Statement stmt = con.createStatement( );
                    String SQL = "SELECT DISTINCT(State) FROM CityState";
                    ResultSet rs = stmt.executeQuery( SQL );
                    while(rs.next())
                    {
                        boolean exists = false;
                        for (int index = 0; index < statetext.getItemCount() && !exists; index++) {
                            if (rs.getString("State").equals(statetext.getItemAt(index))){
                                exists = true;
                            }
                        }
                        if (!exists) {
                            statetext.addItem(rs.getString("State"));
                        }
                    }


                    con.close();

                } catch(Exception e2) {
                    System.err.println("Exception: " + e2.getMessage());
                }
    
    }
   

    // Variables declaration - do not modify                     
    public javax.swing.JPanel basic;
    private javax.swing.JComboBox<String> citytext;
    private javax.swing.JPasswordField confirmtext;
    private javax.swing.JButton create;
    private javax.swing.JTextField emailtext;
    private javax.swing.JTextArea info;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPasswordField passwordtext;
    private javax.swing.JComboBox<String> statetext;
    private javax.swing.JTextField titletext;
    private javax.swing.JTextField usertext;
    private javax.swing.JComboBox<String> usertypetext;
    // End of variables declaration                   
}
