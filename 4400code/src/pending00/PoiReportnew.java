/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pending00;

import java.awt.FlowLayout;
import java.awt.List;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author zhangyongzheng
 */
public class PoiReportnew extends javax.swing.JPanel {

    /**
     * Creates new form PoiReportnew
     */
    public PoiReportnew() {
        initComponents();
        this.setLayout(new FlowLayout());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ReportPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        poi_table = new javax.swing.JScrollPane();
        jtable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        jLabel1.setText(" Poi   Report ");

        jtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PoiLocation", "City", "Mold Min", "Mold Max", "Mold Avg", "AQ Min", "AQ Avg", "AQ Max", "#of Data point", "Flaged"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtable.getTableHeader().setReorderingAllowed(false);
        poi_table.setViewportView(jtable);

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Generate");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ReportPanelLayout = new javax.swing.GroupLayout(ReportPanel);
        ReportPanel.setLayout(ReportPanelLayout);
        ReportPanelLayout.setHorizontalGroup(
            ReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReportPanelLayout.createSequentialGroup()
                .addGap(210, 210, 210)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(115, 115, 115))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReportPanelLayout.createSequentialGroup()
                .addGap(0, 36, Short.MAX_VALUE)
                .addComponent(poi_table, javax.swing.GroupLayout.PREFERRED_SIZE, 783, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReportPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(311, 311, 311))
        );
        ReportPanelLayout.setVerticalGroup(
            ReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReportPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(17, 17, 17)
                .addComponent(poi_table, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(ReportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 886, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ReportPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(44, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 393, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ReportPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        // TODO add your handling code here:
        this.removeAll();
        ChooseFunctionallynew cfy = new ChooseFunctionallynew();
        this.add(cfy);
        validate();
        repaint();
    }//GEN-LAST:event_jButton1ActionPerformed
    private void Sort(DefaultTableModel model){
    TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<DefaultTableModel> (model);
    jtable.setRowSorter(sorter);
    
    
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Connection con = null;
        Statement mystat = null;
        ResultSet myrs = null;
        DefaultTableModel model = (DefaultTableModel)jtable.getModel();
        Sort(model);
        if(model.getRowCount()!=0){
            int row = model.getRowCount();
           for (int i = row - 1; i >= 0; i--) {
                    model.removeRow(i);
                }
        }
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_32",
                "cs4400_32","cSPtL15a");
            if(!con.isClosed())
            System.out.println("Successfully connected to " +"MySQL server using TCP/IP...");
            mystat = con.createStatement();
            String state_findpoi = "SELECT r1.LocationName,r1.PCity,r1.PState,Mold_avg_value,Mold_max_value,Mold_MIN,AQ_avg_value,AQ_max_value,AQ_Min,n.number_of_records AS record_num,r1.Flag FROM aq_report AS r1 left JOIN mold_report AS r2 ON r1.LocationName = r2.LocationName Left JOIN numcount AS n ON n.DLocationName = r1.LocationName\n" +
               "UNION\n" +
               "SELECT r2.LocationName,r2.PCity,r2.PState,Mold_avg_value,Mold_max_value,Mold_MIN,AQ_avg_value,AQ_max_value,AQ_Min,n.number_of_records AS record_num,r2.Flag FROM aq_report AS r1 right join mold_report AS r2 ON r1.LocationName = r2.LocationName LEFT JOIN numcount AS n ON n.DLocationName = r2.LocationName;";
            System.out.println(state_findpoi);
            myrs = mystat.executeQuery(state_findpoi);
            System.out.println("success");
            while(myrs.next()){
                
               float mod_avg = 0;
               int mod_max = 0;
               int mod_min = 0;
               float aq_avg = 0;
               int aq_min = 0;
               int aq_max = 0;
               boolean flagif = false; 
               if(myrs.getString(4)!=null){
                   mod_avg = Float.parseFloat(myrs.getString(4));
               }
               if(myrs.getString(6)!=null){
                  mod_min = Integer.parseInt(myrs.getString(6));    
                  
                }
               if(myrs.getString(5)!=null){
                  mod_max = Integer.parseInt(myrs.getString(5));
                }
               if(myrs.getString(7)!=null){
                  aq_avg = Float.parseFloat(myrs.getString(7));
                }
               if(myrs.getString(9)!=null){
                  aq_min = Integer.parseInt(myrs.getString(9));
                }
               if(myrs.getString(8)!=null){
                  aq_max = Integer.parseInt(myrs.getString(8));
                }
               
                model.addRow(new Object[]{myrs.getString(1),myrs.getString(2),mod_min,mod_max,mod_avg,aq_min,aq_avg,aq_max,Integer.parseInt(myrs.getString(10)),myrs.getString(11)});                
            }   
        } catch(Exception e) {
            System.err.println("Exception: " + e.getMessage());
        } finally {
            try {
                if(con != null)
                con.close();
            } catch(SQLException e) {}
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel ReportPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTable jtable;
    private javax.swing.JScrollPane poi_table;
    // End of variables declaration//GEN-END:variables

    
}
