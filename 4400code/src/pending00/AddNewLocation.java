/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pending00;

import java.sql.Connection;
import java.awt.FlowLayout;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;


/**
 *
 * @author jiayingwang
 */
public class AddNewLocation extends javax.swing.JPanel {

    /**
     * Creates new form AddNewLocation
     */
    public AddNewLocation() {
        initComponents();
        this.setLayout(new FlowLayout());
        citytext.addItem("");
        statetext.addItem("");
        addState();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        basic = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        POItext = new javax.swing.JTextField();
        citytext = new javax.swing.JComboBox<>();
        statetext = new javax.swing.JComboBox<>();
        zipcodetext = new javax.swing.JTextField();
        backbutton = new javax.swing.JButton();
        submitbutton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        info = new javax.swing.JTextArea();

        jLabel1.setText("Add a New Location");

        jLabel2.setText("POI location name");

        jLabel3.setText("City");

        jLabel4.setText("State");

        jLabel5.setText("Zip Code");

        POItext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                POItextActionPerformed(evt);
            }
        });

        citytext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                citytextActionPerformed(evt);
            }
        });

        statetext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statetextActionPerformed(evt);
            }
        });

        backbutton.setText("Back");
        backbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbuttonActionPerformed(evt);
            }
        });

        submitbutton.setText("Submit");
        submitbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitbuttonActionPerformed(evt);
            }
        });

        info.setColumns(20);
        info.setRows(5);
        jScrollPane1.setViewportView(info);

        javax.swing.GroupLayout basicLayout = new javax.swing.GroupLayout(basic);
        basic.setLayout(basicLayout);
        basicLayout.setHorizontalGroup(
            basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(basicLayout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(basicLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap())
                    .addGroup(basicLayout.createSequentialGroup()
                        .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(backbutton)
                            .addGroup(basicLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(44, 44, 44))
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, basicLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                                .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(POItext, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(zipcodetext, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(statetext, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(citytext, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(109, 109, 109))
                            .addGroup(basicLayout.createSequentialGroup()
                                .addGap(89, 89, 89)
                                .addComponent(submitbutton)
                                .addGap(78, 78, 78))))
                    .addGroup(basicLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(basicLayout.createSequentialGroup()
                .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(basicLayout.createSequentialGroup()
                        .addGap(184, 184, 184)
                        .addComponent(jLabel1))
                    .addGroup(basicLayout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        basicLayout.setVerticalGroup(
            basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, basicLayout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(53, 53, 53)
                .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(POItext, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(zipcodetext, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(basicLayout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(backbutton)
                            .addComponent(submitbutton))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(basicLayout.createSequentialGroup()
                        .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(statetext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(citytext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(basic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(basic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>                        

    private void POItextActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void backbuttonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
         this.removeAll();
           AddNewDataPoint np = new AddNewDataPoint();
           this.add(np);
           validate();
           repaint();
    }                                          

    private void citytextActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:    
    }                                        

    private void submitbuttonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
                String ln = POItext.getText();
                
                
                if (ln.length() == 0 || citytext.getSelectedItem() == null || statetext.getSelectedItem() == null || zipcodetext.getText().length() == 0){ 
                    info.setText("Please fill out all the blanks!");
                    
                }else{
                     //ensure the unique of location name
                    String ct = (String) citytext.getSelectedItem();
                    String st = (String) statetext.getSelectedItem();
                    Connection con = null;
                    try {
                        Class.forName("com.mysql.jdbc.Driver").newInstance();
                        con = (Connection) DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_32","cs4400_32","cSPtL15a");
                        if(!con.isClosed())
                            System.out.println("Successfully connected to " +
                                "MySQL server using TCP/IP...");

                        Statement statement = con.createStatement();
                        ResultSet result = statement.executeQuery("SELECT * FROM POI WHERE LocationName='"+ln+"'");
                        if(result.next()){
                            info.setText("Sorry, we already have this POI location!\n");
                        }else{
                            if(zipcodetext.getText().length()==5){
                                int zip = Integer.parseInt(zipcodetext.getText());
                                Statement statement2 = con.createStatement();
                                statement2.executeUpdate("INSERT INTO POI " + "VALUES (null,false,'"+ln+"','"+zip+"','"+ct+"','"+st+"')");
                                info.setText("Thank you, you have successfully added a new POI location!\n");
                               
                            }else{
                                info.setText("Sorry, please input the correct zip code!\n");
                            }
                        }
                        con.close();

                    }catch(Exception e2) {
                        System.err.println("Exception: " + e2.getMessage());
                    }
              
                }
         
    }                                            

    private void statetextActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        citytext.removeAllItems();
        String state = (String) statetext.getSelectedItem();
        filtercity(state);
        System.out.println(state);
    }                                         

    private void filtercity(String state){
        
        Connection con = null;
        try {
                    Class.forName("com.mysql.jdbc.Driver").newInstance();
                    con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_32","cs4400_32","cSPtL15a");
                    if(!con.isClosed())
                        System.out.println("Successfully connected to " +
                                "MySQL server using TCP/IP...");

                    Statement stmt = con.createStatement( );
                    String SQL = "SELECT City FROM CityState WHERE State = '"+state+"';";
                    ResultSet rs = stmt.executeQuery(SQL);
                   
                    while(rs.next()){
                        citytext.addItem(rs.getString("City"));
                    }
                    
                    con.close();

            } catch(Exception e2) {
                    System.err.println("Exception: " + e2.getMessage());
            }
    }
    
    private void addState(){
         Connection con = null;
                try {
                    Class.forName("com.mysql.jdbc.Driver").newInstance();
                    con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_32","cs4400_32","cSPtL15a");
                    if(!con.isClosed())
                        System.out.println("Successfully connected to " +
                                "MySQL server using TCP/IP...");

                    Statement stmt = con.createStatement( );
                    String SQL = "SELECT DISTINCT(State) FROM CityState";
                    ResultSet rs = stmt.executeQuery( SQL );
                    while(rs.next())
                    {
                        boolean exists = false;
                        for (int index = 0; index < statetext.getItemCount() && !exists; index++) {
                            if (rs.getString("State").equals(statetext.getItemAt(index))){
                                exists = true;
                            }
                        }
                        if (!exists) {
                            statetext.addItem(rs.getString("State"));
                        }
                    }


                    con.close();

                } catch(Exception e2) {
                    System.err.println("Exception: " + e2.getMessage());
                }
    
    }
    

    // Variables declaration - do not modify                     
    private javax.swing.JTextField POItext;
    private javax.swing.JButton backbutton;
    private javax.swing.JPanel basic;
    private javax.swing.JComboBox<String> citytext;
    private javax.swing.JTextArea info;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> statetext;
    private javax.swing.JButton submitbutton;
    private javax.swing.JTextField zipcodetext;
    // End of variables declaration                   
}
