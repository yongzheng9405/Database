/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pending00;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.awt.CardLayout;
import java.awt.FlowLayout;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import javax.swing.text.DateFormatter;
import javax.swing.text.DefaultFormatterFactory;

/**
 *
 * @author jiayingwang
 */
public class AddNewDataPoint extends javax.swing.JPanel {

    /**
     * Creates new form AddNewDataPoint
     */
    public AddNewDataPoint() {
        initComponents();
        this.setLayout(new FlowLayout());
        POItext.addItem("");
        datatypetext.addItem("");
        DateFormatter df = new DateFormatter(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss"));
        DefaultFormatterFactory factory = new DefaultFormatterFactory(); // other ctors possible
        factory.setDefaultFormatter(df); // here simple default solution
        timeanddatetext.setFormatterFactory(factory);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        basic = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        POItext = new javax.swing.JComboBox<>();
        addanewlocationbutton = new javax.swing.JButton();
        timeanddatetext = new javax.swing.JFormattedTextField();
        datatypetext = new javax.swing.JComboBox<>();
        datavaluetext = new javax.swing.JTextField();
        backbutton = new javax.swing.JButton();
        submitbutton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        info = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        jLabel2.setText("POI location name");

        jLabel3.setText("Time and date of reading");

        jLabel4.setText("Data type");

        jLabel5.setText("Data value");

        POItext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                POItextActionPerformed(evt);
            }
        });

        addanewlocationbutton.setText("Add a new location");
        addanewlocationbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addanewlocationbuttonActionPerformed(evt);
            }
        });

        timeanddatetext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeanddatetextActionPerformed(evt);
            }
        });

        datatypetext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datatypetextActionPerformed(evt);
            }
        });

        backbutton.setText("Back");
        backbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbuttonActionPerformed(evt);
            }
        });

        submitbutton.setText("Submit");
        submitbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitbuttonActionPerformed(evt);
            }
        });

        info.setColumns(20);
        info.setRows(5);
        jScrollPane1.setViewportView(info);

        jLabel1.setText("Add a new data point");

        jLabel6.setText("(Format as: 2016-12-04 03:12:45)");

        javax.swing.GroupLayout basicLayout = new javax.swing.GroupLayout(basic);
        basic.setLayout(basicLayout);
        basicLayout.setHorizontalGroup(
            basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(basicLayout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(backbutton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(submitbutton)
                .addGap(114, 114, 114))
            .addGroup(basicLayout.createSequentialGroup()
                .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(basicLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(basicLayout.createSequentialGroup()
                                .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel6))
                                .addGap(22, 22, 22)
                                .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(basicLayout.createSequentialGroup()
                                        .addComponent(POItext, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(addanewlocationbutton))
                                    .addComponent(datatypetext, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(timeanddatetext, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(datavaluetext, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(basicLayout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        basicLayout.setVerticalGroup(
            basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(basicLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(POItext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addanewlocationbutton)
                    .addComponent(jLabel2))
                .addGap(15, 15, 15)
                .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(timeanddatetext, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(datatypetext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(datavaluetext, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(basicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backbutton)
                    .addComponent(submitbutton))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(basic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(basic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addanewlocationbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addanewlocationbuttonActionPerformed
        // TODO add your handling code here:
           this.removeAll();
           AddNewLocation np = new AddNewLocation();
           this.add(np);
           validate();
           repaint();
    }//GEN-LAST:event_addanewlocationbuttonActionPerformed

    private void submitbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitbuttonActionPerformed
        // TODO add your handling code here:
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = (Connection) DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_32","cs4400_32","cSPtL15a");
            if(!con.isClosed())
                System.out.println("Successfully connected to " +
                        "MySQL server using TCP/IP...");

            if(POItext.getSelectedItem() == "" || datatypetext.getSelectedItem() == "" || timeanddatetext.getText().length() == 0 || datavaluetext.getText().length() == 0){
                info.setText("Please fill out all the blanks!"); 
            }else{
                String ln = (String) POItext.getSelectedItem();
                String dy = (String) datatypetext.getSelectedItem();
                String dt = timeanddatetext.getText();

                Statement statement = con.createStatement();
                ResultSet result = statement.executeQuery("SELECT * FROM DataPoint WHERE DLocationName='"+ln+"' AND DateTime = '"+dt+"'"); 

                if(result.next()){
                    info.setText("Sorry, we already have this date and time with the same location name!\n");
                }else{
                    if(POItext.getSelectedItem() == null || datatypetext.getSelectedItem() == null || dt.length() == 0 || datavaluetext.getText().length() == 0) { 
                        info.setText("Please fill out all the blanks!"); 
                    }else {              
                        if (!datavaluetext.getText().matches("\\d+")) {                        
                            info.setText("Please ensure the data value be integer!");
                        }else { 
                            int dv = Integer.parseInt(datavaluetext.getText());
                            Statement statement2 = con.createStatement();
                            statement2.executeUpdate("INSERT INTO DataPoint " + "VALUES (null ,'"+dt+"','"+dv+"','"+ln+"','"+dy+"')");
                            info.setText("Thank you, you have succesfully added a data point!\n");

                        }
                    }

                }

            }

            con.close();

        } catch(Exception e2) {
            System.err.println("Exception: " + e2.getMessage());
        }
  
    }//GEN-LAST:event_submitbuttonActionPerformed

    private void backbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbuttonActionPerformed
        // TODO add your handling code here:
        this.removeAll();
        Login2 np = new Login2();
        this.add(np);
        validate();
        repaint();
        
    }//GEN-LAST:event_backbuttonActionPerformed

    private void datatypetextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datatypetextActionPerformed
        // TODO add your handling code here:
        Connection con = null;
                try {
                    Class.forName("com.mysql.jdbc.Driver").newInstance();
                    con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_32","cs4400_32","cSPtL15a");
                    if(!con.isClosed())
                        System.out.println("Successfully connected to " +
                                "MySQL server using TCP/IP...");

                    Statement stmt = con.createStatement( );
                    String SQL2 = "SELECT DISTINCT(Type) FROM DataType";
                    ResultSet rs2 = stmt.executeQuery(SQL2);
                    while(rs2.next()) {

                        boolean exists = false;
                        for (int index = 0; index < datatypetext.getItemCount() && !exists; index++) {
                            if (rs2.getString("Type").equals(datatypetext.getItemAt(index))){
                                exists = true;
                            }
                        }
                        if (!exists) {
                            datatypetext.addItem(rs2.getString("Type"));
                        }
                    }

                    con.close();

                } catch(Exception e2) {
                    System.err.println("Exception: " + e2.getMessage());
                }
    }//GEN-LAST:event_datatypetextActionPerformed

    private void POItextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_POItextActionPerformed
        // TODO add your handling code here:
        Connection con = null;
                try {
                    Class.forName("com.mysql.jdbc.Driver").newInstance();
                    con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_32","cs4400_32","cSPtL15a");
                    if(!con.isClosed())
                        System.out.println("Successfully connected to " +
                                "MySQL server using TCP/IP...");

                    Statement stmt = con.createStatement( );
                    String SQL1 = "SELECT DISTINCT(LocationName) FROM POI";
                    ResultSet rs1 = stmt.executeQuery(SQL1);
                    while(rs1.next()) {

                        boolean exists = false;
                        for (int index = 0; index < POItext.getItemCount() && !exists; index++) {
                            if (rs1.getString("LocationName").equals(POItext.getItemAt(index))){
                                exists = true;
                            }
                        }
                        if (!exists) {
                           POItext.addItem(rs1.getString("LocationName"));
                        }
                    }

                    con.close();

                } catch(Exception e2) {
                    System.err.println("Exception: " + e2.getMessage());
                }

    }//GEN-LAST:event_POItextActionPerformed

    private void timeanddatetextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeanddatetextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeanddatetextActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> POItext;
    private javax.swing.JButton addanewlocationbutton;
    private javax.swing.JButton backbutton;
    private javax.swing.JPanel basic;
    private javax.swing.JComboBox<String> datatypetext;
    private javax.swing.JTextField datavaluetext;
    private javax.swing.JTextArea info;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton submitbutton;
    private javax.swing.JFormattedTextField timeanddatetext;
    // End of variables declaration//GEN-END:variables
}
