/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pending00;

import java.awt.FlowLayout;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.DefaultCellEditor;
import javax.swing.JCheckBox;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
/**
 *
 * @author lihan
 */
public class PendingAccounts extends javax.swing.JPanel {

    /**
     * Creates new form PendingAccounts
     */
    public PendingAccounts() {
        initComponents();
        this.setLayout(new FlowLayout());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        DataScrollPane1 = new javax.swing.JScrollPane();
        DataTable = new javax.swing.JTable();
        Label = new javax.swing.JLabel();
        RejectButton = new javax.swing.JButton();
        ViewButton = new javax.swing.JButton();
        AcceptButton = new javax.swing.JButton();
        BackButton = new javax.swing.JButton();

        DataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Selected", "Username", "Email", "City", "State", "Title"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        DataTable.getTableHeader().setReorderingAllowed(false);
        DataScrollPane1.setViewportView(DataTable);

        Label.setText("Pending City Official Account");

        RejectButton.setText("Reject");
        RejectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RejectButtonActionPerformed(evt);
            }
        });

        ViewButton.setText("View City Official Accounts");
        ViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewButtonActionPerformed(evt);
            }
        });

        AcceptButton.setText("Accept");
        AcceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AcceptButtonActionPerformed(evt);
            }
        });

        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ViewButton)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(62, 62, 62)
                            .addComponent(DataScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 653, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(307, 307, 307)
                            .addComponent(Label))))
                .addContainerGap(85, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(BackButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(RejectButton)
                .addGap(103, 103, 103)
                .addComponent(AcceptButton)
                .addGap(178, 178, 178))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(72, Short.MAX_VALUE)
                .addComponent(Label)
                .addGap(9, 9, 9)
                .addComponent(ViewButton)
                .addGap(27, 27, 27)
                .addComponent(DataScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RejectButton)
                    .addComponent(BackButton)
                    .addComponent(AcceptButton))
                .addGap(55, 55, 55))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1173, 1173, 1173))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 212, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewButtonActionPerformed
        // TODO add your handling code here:
        Connection con = null;
        DefaultTableModel model;
        model = (DefaultTableModel) DataTable.getModel();
        JCheckBox checkBox = new javax.swing.JCheckBox();
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_32","cs4400_32","cSPtL15a");
            if(!con.isClosed())
            System.out.println("Successfully connected to " + "MySQL server using TCP/IP...");

            Statement statement = con.createStatement();
            ResultSet result = statement.executeQuery("SELECT CityOfficial.Approved, CityOfficial.CUserName, user.EmailAddress, CityOfficial.CCity, CityOfficial.CState, CityOfficial.Title FROM CityOfficial, user WHERE CityOfficial.Approved IS NULL AND CityOfficial.CUserName = user.UserName;");

            while(result.next()){
                model.addRow(new Object[]{null,result.getString(2),result.getString(3),result.getString(4),result.getString(5),result.getString(6)});

            }
            DataTable.getColumn("Selected").setCellEditor(new DefaultCellEditor(checkBox));
            Sort(model);
            Refresh();

            con.close();

        } catch(Exception e2) {
            System.err.println("Exception: " + e2.getMessage());
        }
    }//GEN-LAST:event_ViewButtonActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        // TODO add your handling code here:
        this.removeAll();
        PendingFunction pf = new PendingFunction();
        this.add(pf);
        validate();
        repaint();

    }//GEN-LAST:event_BackButtonActionPerformed

    private void RejectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RejectButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model1;
        model1 = (DefaultTableModel) DataTable.getModel();

        int row = DataTable.getRowCount();
        int column = DataTable.getColumnCount();

        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_32","cs4400_32","cSPtL15a");

            for(int i = 0; i < row; i++) {
                if (DataTable.getValueAt(i, 0) != null) {
                    if (((Boolean) DataTable.getValueAt(i, 0)).booleanValue()) {
                        DataTable.setValueAt(false, i, 0);

                        //if(!con.isClosed())
                        //System.out.println("Successfully connected to " + "MySQL server using TCP/IP...");

                        Statement statement = con.createStatement();

                        String user_name = DataTable.getValueAt(i, 1).toString();
                        //String date_time = DataTable.getValueAt(i, 4).toString();

                        statement.executeUpdate("UPDATE CityOfficial SET Approved = FALSE WHERE CUserName = '" + user_name + "';");

                    }
                }
            }
            Refresh();
            con.close();

        } catch(Exception e2) {
            System.err.println("Exception: " + e2.getMessage());
        }
    }//GEN-LAST:event_RejectButtonActionPerformed

    private void AcceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AcceptButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model1;
        model1 = (DefaultTableModel) DataTable.getModel();

        int row = DataTable.getRowCount();
        int column = DataTable.getColumnCount();

        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_32","cs4400_32","cSPtL15a");

            for(int i = 0; i < row; i++) {
                if (DataTable.getValueAt(i, 0) != null) {
                    if (((Boolean) DataTable.getValueAt(i, 0)).booleanValue()) {
                        DataTable.setValueAt(true, i, 0);

                        //if(!con.isClosed())
                        //System.out.println("Successfully connected to " + "MySQL server using TCP/IP...");

                        Statement statement = con.createStatement();

                        String user_name = DataTable.getValueAt(i, 1).toString();
                        //String date_time = DataTable.getValueAt(i, 4).toString();

                        statement.executeUpdate("UPDATE CityOfficial SET Approved = TRUE WHERE CUserName = '" + user_name + "';");

                    }
                }
            }
            Refresh();
            con.close();

        } catch(Exception e2) {
            System.err.println("Exception: " + e2.getMessage());
        }

        }

        // To remove the lines that has been accepted or rejected and to update the table
        private void Refresh() {
            Connection con = null;
            DefaultTableModel model2;
            model2 = (DefaultTableModel) DataTable.getModel();
            int rowCount = model2.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model2.removeRow(i);
            }

            JCheckBox checkBox = new javax.swing.JCheckBox();
            try {
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                con = DriverManager.getConnection("jdbc:mysql://academic-mysql.cc.gatech.edu/cs4400_32","cs4400_32","cSPtL15a");
                if(!con.isClosed())
                System.out.println("Successfully connected to " + "MySQL server using TCP/IP...");

                Statement statement = con.createStatement();
                ResultSet result = statement.executeQuery("SELECT Approved, CUserName, EmailAddress, CCity, CState, Title FROM CityOfficial, user WHERE Approved IS NULL AND CUserName = UserName;");

                while(result.next()){
                    model2.addRow(new Object[]{null,result.getString(2),result.getString(3),result.getString(4),result.getString(5),result.getString(6)});

                }
                DataTable.getColumn("Selected").setCellEditor(new DefaultCellEditor(checkBox));
                Sort(model2);

                con.close();

            } catch(Exception e2) {
                System.err.println("Exception: " + e2.getMessage());
            }
    }//GEN-LAST:event_AcceptButtonActionPerformed

private void Sort(DefaultTableModel model){
    TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<DefaultTableModel> (model);
    DataTable.setRowSorter(sorter);
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AcceptButton;
    private javax.swing.JButton BackButton;
    private javax.swing.JScrollPane DataScrollPane1;
    private javax.swing.JTable DataTable;
    private javax.swing.JLabel Label;
    private javax.swing.JButton RejectButton;
    private javax.swing.JButton ViewButton;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
